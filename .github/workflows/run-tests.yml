name: tests

on: [push, pull_request]

jobs:

  laravel:
    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    # env:
    #   DB_CONNECTION: mysql_test
    #   DB_DATABASE: candid__test
    #   DB_USERNAME: root
    #   DB_PASSWORD: root
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php: [8.1]
        laravel: [10.*]
        stability: [prefer-lowest, prefer-stable]
        include:
          - laravel: 10.*

    # Docs: https://docs.github.com/en/actions/using-containerized-services
    # services:
    #   mysql:
    #     image: mysql:latest
    #     env:
    #       MYSQL_ALLOW_EMPTY_PASSWORD: false
    #       MYSQL_DATABASE: galee__test
    #       MYSQL_ROOT_PASSWORD: root
    #     ports:
    #       - 3306/tcp
    #     options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, dom, fileinfo
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
        # run: echo "name=dir::$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      #- name: Add HTTP basic auth credentials
      #  run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      # - name: Directory Permissions
      #   run: chmod -R 777 storage bootstrap/cache

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      # - name: Run Migration
      #   run: php artisan migrate -v
        # env:
        #   DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      # - name: Clear Config
      #   run: php artisan config:clear

      # - name: Compiling assets
      #   run: |
      #     npm install
      #     npm run build

      - name: Test with phpunit
        # env:
        run: vendor/bin/pest --coverage
